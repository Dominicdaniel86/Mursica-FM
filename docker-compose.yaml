services:
  node-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: dominic86/spotify-session-backend:0.2
    container_name: spotify-session-backend
    env_file:
    - ./backend/.env
    ports:
      - "3000:3000"
      - "9229:9229"
    networks:
      - spotify-session-network
    depends_on:
      - database
    volumes:
      - ./backend/logs:/usr/src/app/logs
      - ./backend/.env:/usr/src/app/.env
      - ./backend/src:/usr/src/app/src
  
  nginx-proxy:
    build:
      context: ./
      dockerfile: ./server/Dockerfile
    image: dominic86/spotify-session-proxy:0.2
    container_name: spotify-session-proxy
    ports:
      - "80:80"
    networks:
      - spotify-session-network
    depends_on:
      - node-backend
    volumes:
      - ./frontend/public/html:/var/www/spotify-session-app/assets/html
      - ./frontend/public/css:/var/www/spotify-session-app/assets/css
      - ./frontend/public/icons:/var/www/spotify-session-app/assets/icons
      - ./frontend/dist:/var/www/spotify-session-app/assets/javascript
      - ./server/logs:/var/log/nginx

  database:
    image: postgres:17.2-alpine
    container_name: postgresql-container
    env_file:
    - ./database/.env
    ports:
      - "5432:5432"
    networks:
      - spotify-session-network
    restart: on-failure
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/data:/var/lib/postgresql/data
      - ./database/logs:/var/log/postgresql

networks:
  spotify-session-network:
    driver: bridge
